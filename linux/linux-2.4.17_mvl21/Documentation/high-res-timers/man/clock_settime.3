.\" Copyright (C) 2002 Robert Love (rml@tech9.net), MontaVista Software
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation, version 2.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH CLOCK_SETTIME 3  2002-03-14 "Linux Manpage" "Linux Programmer's Manual"
.SH NAME
clock_settime \- set a clock's time value
.SH SYNOPSIS
.B cc [ flag ... ] file -lrt [ library ... ]
.sp
.B #include <time.h>
.sp
.BI "int clock_settime(clockid_t *" which_clock ", const struct timespec *" setting ");"
.SH DESCRIPTION
.B clock_settime
sets the clock specified by
.IR which_clock
to the time value specified by
.IR setting .
Time values that are not integer multiples of the clock resolution are
truncated down.
.PP
The calling process must possess the appropriate capability (typically
.BR CAP_SYS_TIME ).
.PP
By definition, the
.BR CLOCK_MONOTONIC
and
.BR CLOCK_MONOTONIC_HR
clocks can not be set.
.PP
To retrieve the current time value of a given clock, see
.BR clock_gettime (3).
To retrieve the resolution of a given clock, see
.BR clock_getres (3).
.PP
For a listing of valid clocks, see
.BR clock_gettime (3).
.SH "RETURN VALUE"
On success,
.BR clock_settime
returns the value 0 and sets the specified clock to the specified time value.
.PP
On failure,
.BR clock_settime
returns the value -1 and
.IR errno
is set appropriately.
.SH ERRORS
.TP
.BR EFAULT
A specified memory address is outside the address range of the calling process.
.TP
.BR EINVAL
The clock specified by
.IR which_clock
is invalid, the time value specified by
.IR setting
is outside the range for the given clock, or the nanosecond value specified by
.IR setting
is less than zero or greater than or equal to 1000 million.
.TP
.BR ENOSYS
The function is not supported on this implementation.
.TP
.BR EPERM
The requesting process does not have the requisite privilege to set the
specified clock.
.SH "CONFORMING TO"
POSIX 1003.1b (formerly POSIX.4) as ammended by POSIX 1003.1j-2000.
.SH "SEE ALSO"
.BR clock_getcpuclockid (3),
.BR clock_getres (3),
.BR clock_gettime (3),
.BR clock_nanosleep (3),
.BR pthread_getcpuclockid (3),
.BR timer_create (3),
.BR timer_delete (3),
.BR timer_settime (3),
.BR timer_gettime (3)
.sp
.I IEEE 1003.1b-1993
(POSIX.1b standard, formerly POSIX.4), Section 14 (Clocks and Timers).

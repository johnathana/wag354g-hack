.\" Copyright (C) 2002 Robert Love (rml@tech9.net), MontaVista Software
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation, version 2.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH CLOCK_GETRES 3  2002-03-14 "Linux Manpage" "Linux Programmer's Manual"
.SH NAME
clock_getres \- get a clock's resolution
.SH SYNOPSIS
.B cc [ flag ... ] file -lrt [ library ... ]
.sp
.B #include <time.h>
.sp
.BI "int clock_getres(clockid_t *" which_clock ", struct timespec *" resolution ");"
.SH DESCRIPTION
.B clock_getres
retrieves the resolution (granularity) of the clock specified by
.IR which_clock .
The retrieved value is placed in the (non-NULL)
.IR timespec
structure pointed to by
.IR resolution .
.PP
The resolution returned by this function is the resolution used in timer
and 
.BR clock_nanosleep(3) 
calls using the same clock.  
.BR Clock_gettime(3)
, on the other hand, will always return the best resolution it can given
the clock
source.  This resolution is usually better than one microsecond, except
for 
.BR CLOCK_PROCESS_CPUTIME_ID 
and 
.BR CLOCK_THREAD_CPUTIME_ID 
which will be the same as returned here.
.PP
The clock resolutions are system-dependent and can not be set by the user.
.PP
For a listing of valid clocks, see
.BR clock_gettime (3).
.SH "RETURN VALUE"
On success,
.BR clock_getres
returns the value 0 and places the requested resolution in the specified
structure.
.PP
On failure,
.BR clock_getres
returns the value -1 and
.IR errno
is set appropriately.
.SH ERRORS
.TP
.BR EFAULT
A specified memory address is outside the address range of the calling process.
.TP
.BR EINVAL
The clock specified by
.IR which_clock
is invalid.
.TP
.BR ENOSYS
The function is not supported on this implementation.
.SH "CONFORMING TO"
POSIX 1003.1b (formerly POSIX.4) as ammended by POSIX 1003.1j-2000.
.SH "SEE ALSO"
.BR clock_getcpuclockid (3),
.BR clock_gettime (3),
.BR clock_settime (3),
.BR clock_nanosleep (3),
.BR pthread_getcpuclockid (3),
.BR timer_create (3),
.BR timer_delete (3),
.BR timer_settime (3),
.BR timer_gettime (3)
.sp
.I IEEE 1003.1b-1993
(POSIX.1b standard, formerly POSIX.4), Section 14 (Clocks and Timers).

.\" Copyright (C) 2002 Robert Love (rml@tech9.net), MontaVista Software
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation, version 2.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH CLOCK_GETTIME 3  2002-03-14 "Linux Manpage" "Linux Programmer's Manual"
.SH NAME
clock_gettime \- get the current value for the specified clock
.SH SYNOPSIS
.B cc [ flag ... ] file -lrt [ library ... ]
.sp
.B #include <time.h>
.sp
.BI "int clock_gettime(clockid_t *" which_clock ", struct timespec *" setting ");"
.SH DESCRIPTION
.B clock_gettime
retrieves the current value for the clock specified by
.IR which_clock .
The retrieved value is placed in the
.IR timespec
structure pointed to by
.IR setting .
Depending on the resolution of the specified clock, it may be possible to
retrieve the same value with consecutive calls to
.BR clock_gettime (3).
.PP
To set the current time value of a given clock, see
.BR clock_settime (3).
To retrieve the resolution of a given clock, see
.BR clock_getres (3).
.PP
.SS Clock types
The
.I which_clock
argument specifies the clock type.  The type used determines the behavior and
properties of the clock.  Valid clock types are:
.TP
.BR CLOCK_REALTIME
Wall clock.  The time is expressed in seconds and nanoseconds since the UNIX
Epoch (00:00 1 Jan 1970 UTC).  The POSIX standard dictates the resolution of
this clock not be worse than 100Hz (10ms). In Linux, the resolution is 1/HZ
(usually 10ms on 32-bit architectures and 1ms on 64-bit architectures).  As
this clock is based on wall time, either the user or system can set it and thus
it is not guaranteed to be monotonic.
.TP
.BR CLOCK_REALTIME_HR
High-resolution version of
.BR CLOCK_REALTIME.
Resolution is architecture-dependent.
.TP
.BR CLOCK_MONOTONIC
System uptime clock.  The time is expressed in seconds and nanoseconds since
boot.  The resolution is again 1/HZ.  The clock is guaranteed to be monotonic.
.TP
.BR CLOCK_MONOTONIC_HR
High-resolution version of
.BR CLOCK_MONOTONIC .
Resolution is architecture-dependent.
.TP
.BR CLOCK_PROCESS_CPUTIME_ID
CPU-time clock of the calling process.  Time is measured in seconds and
nanoseconds the current process has spent executing on the system.  The
resolution is implementation-defined; in Linux it is 1/HZ.  Timers and
clock_nanosleep calls on this clock are not supported.
.TP
.BR CLOCK_THREAD_CPUTIME_ID
Like
.BR CLOCK_PROCESS_CPUTIME_ID ,
but for the current thread, not process.
.PP
The clocks
.BR CLOCK_REALTIME_HR
and
.BR CLOCK_MONOTONIC_HR
are present only if the kernel is configured with high-resolution timer
support.
.SH "RETURN VALUE"
On success,
.BR clock_gettime
returns the value 0 and places the requested clock value in the specified
structure.
.PP
On failure,
.BR clock_gettime
returns the value -1 and
.IR errno
is set appropriately.
.SH ERRORS
.TP
.BR EFAULT
A specified memory address is outside the address range of the calling process.
.TP
.BR EINVAL
The clock specified by
.IR which_clock
is invalid.
.TP
.BR ENOSYS
The function is not supported on this implementation.
.SH "CONFORMING TO"
POSIX 1003.1b (formerly POSIX.4) as ammended by POSIX 1003.1j-2000.
.SH "SEE ALSO"
.BR clock_getcpuclockid (3),
.BR clock_getres (3),
.BR clock_settime (3),
.BR clock_nanosleep (3),
.BR pthread_getcpuclockid (3),
.BR timer_create (3),
.BR timer_delete (3),
.BR timer_settime (3),
.BR timer_gettime (3)
.sp
.I IEEE 1003.1b-1993
(POSIX.1b standard, formerly POSIX.4), Section 14 (Clocks and Timers).

.\" Copyright (C) 2002 Robert Love (rml@tech9.net), MontaVista Software
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation, version 2.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH CLOCK_NANOSLEEP 3  2002-03-14 "Linux Manpage" "Linux Programmer's Manual"
.SH NAME
clock_nanosleep \- high-resolution sleep with a specified clock
.SH SYNOPSIS
.B cc [ flag ... ] file -lrt [ library ... ]
.sp
.B #include <time.h>
.sp
.BI "int clock_nanosleep(clockid_t *" which_clock ", int " flags ", const struct timespec *" rqtp ", struct timespec *" rmtp ");"
.SH DESCRIPTION
.B clock_nanosleep
suspends execution of the currently running thread until the time specified by
.IR rqtp
has elapsed or until the thread receives a signal.
.PP
The default behavior is to interpret the specified sleep time as relative
to the current time.
The
.BR TIMER_ABSTIME
flag specified in
.IR flags
will modify this behavior to make the time specified by
.IR rqtp
absolute with respect to the clock value specified by
.IR which_clock .
.PP
If the
.BR TIMER_ABSTIME
flag is specified and the time value specified by
.IR rqtp
is less than or equal to the current time value of the specified clock (or
the clock's value is changed to such a time), the function will return
immediately.  Further, the time slept is affected by any changes to the
clock after the call to
.BR clock_nanosleep (3).
That is, the call will complete when the actual time is equal or greater
than the requested time no matter how the clock reaches that time, via
setting or actual passage of time or some combination of these.  The
only clock that can be set is 
.BR CLOCK_REALTIME 
and 
.BR CLOCK_REALTIME_HR 
which are, in fact the same clock with differing resolutions.  Thus 
.BR clock_settime(3) 
on either of these clocks changes both.  This clock is also set by the
.BR settimeofday(3) 
call and by the syncronization code 
.BR adjtimex(2)
call. 
.PP
If
.BR TIMER_ABSTIME
is not specified, the
.IR timespec
structure pointed to by
.IR rmtp
is updated to contain the amount of time remaining in the interval (i.e., the
requested time minus the time actually slept).  If
.IR rmtp
is NULL, the remaining time is not set.  The
.IR rmtp
value is not set in the case of an absolute time value.
.PP
The time slept may be longer than requested as the specified time value is
rounded up to an integer multiple of the clock resolution, or due to scheduling
and other system activity.  Except for the case of interruption by a signal,
the suspension time is never less than requested.
.PP
The
.BR CLOCK_PROCESS_CPUTIME_ID
and
.BR CLOCK_THREAD_CPUTIME_ID
clocks are not supported by
.BR clock_nanosleep (3).
.PP
Like
.BR nanosleep (2),
but unlike
.BR sleep (3) ,
.BR clock_nanosleep (3)
does not affect signals.
.PP
For a listing of valid clocks, see
.BR clock_gettime (3).
.SH "RETURN VALUE"
On success,
.BR clock_nanosleep
returns the value 0 after at least the specified time has elapsed.
.PP
On failure,
.BR clock_nanosleep
returns the value -1 and
.IR errno
is set appropriately.
.SH ERRORS
.TP
.BR EFAULT
A specified memory address is outside the address range of the calling process.
.TP
.BR EINTR
The call was interrupted by a signal.
.TP
.BR EINVAL
The clock specified by
.IR which_clock
is invalid, the
.IR rqtp
argument specified a nanosecond value less than zero or greater than or equal
to 1000 million, or
.IR TIMER_ABSTIME
is specified in
.IR flags
and the value specified by
.IR rqtp
is outside the range for the clock specified by
.IR which_clock .
.TP
.BR ENOSYS
The function is not supported on this implementation.
.SH "CONFORMING TO"
POSIX 1003.1b (formerly POSIX.4) as ammended by POSIX 1003.1j-2000.
.SH "SEE ALSO"
.BR clock_getres (3),
.BR clock_gettime (3),
.BR clock_settime (3),
.BR nanosleep (2),
.BR sleep (3),
.BR usleep (3)
.sp
.I IEEE 1003.1b-1993
(POSIX.1b standard, formerly POSIX.4), Section 14 (Clocks and Timers).

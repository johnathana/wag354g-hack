.\" Copyright (C) 2002 Robert Love (rml@tech9.net), MontaVista Software
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation, version 2.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.TH TIMER_CREATE 3  2002-03-14 "Linux Manpage" "Linux Programmer's Manual"
.SH NAME
timer_create \- create a POSIX timer
.SH SYNOPSIS
.B cc [ flag ... ] file -lrt [ library ... ]
.sp
.B #include <time.h>
.br
.B #include <signal.h>
.sp
.BI "int timer_create(clockid_t " which_clock ", struct sigevent *" timer_event_spec ", timer_t *" created_timer_id ");"
.SH DESCRIPTION
.B timer_create
creates an interval timer based on the POSIX 1003.1b standard using the clock
type specified by
.IR which_clock .
The timer ID is stored in the
.IR timer_t
value pointed to by
.IR created_timer_id .
The timer is started by
.BR timer_settime (3).
.PP
If
.IR timer_event_spec
is non-NULL, it specifies the behavior on timer expiration.  If the
.IR sigev_notify
member of
.IR timer_event_spec
is 
.BR SIGEV_SIGNAL
then the signal specified by
.IR sigev_signo
is sent to the process on expiration.
.PP
If the value is
.BR SIGEV_THREAD_ID
then the
.BR sigev_notify_thread_id
member of
.BR timer_event_spec
should contain the
.IR pthread_t
id of the thread that is to receive the signal.
.PP
If the value is
.BR SIGEV_THREAD
then the specified
.IR sigev_notify_function
is created in a new thread with
.IR sigev_value
as the argument.
.PP
If the value is
.BR SIGEV_NONE
then no signal is sent.
.PP
.BR SIGEV_THREAD_ID
and
.BR SIGEV_SIGNAL
are compatible and may be ORed together.
.PP
If
.IR timer_event_spec
is
.BR NULL ,
.BR SIGALRM
is sent to the process upon timer expiration with the value of the timer ID,
.IR timer_id .
.PP
The maximum number of timers is a system-wide value, set at kernel configure
time, which is generally quite high.
.PP
Each timer is owned by a specific thread.  The owning thread is either the
calling thread or the thread specified by
.BR SIGEV_THREAD_ID .
The owning thread receives the signal on timer expiration.  If the owning
thread exits all of its timers are disabled and deleted.  Any thread in a
process, however, may make calls on the timer.  Timers are not inherited by
a child process across a
.BR fork (2)
and are disabled and deleted by a call to one of the
.BR exec
functions.
.PP
For a listing of valid clocks, see
.BR clock_gettime (3).
Note 
.BR CLOCK_PROCESS_CPUTIME_ID
and
.BR CLOCK_THREAD_CPUTIME_ID
are not supported by
.BR timer_create (3).
.PP
.SS Thread support
Note
.BR SIGEV_THREAD_ID
support requires thread groups.  Currently the linuxthreads package does
not use thread groups.  NG-threads, based on GNU-pth, does use thread
groups and is compatible.
.SH "RETURN VALUE"
On success,
.BR timer_create
returns a value of 0 and the timer ID of the new timer is placed in
.IR created_timer_id .
.PP
On failure,
.BR timer_create
returns a value of -1 and
.IR errno
is set appropriately.
.SH ERRORS
.TP
.BR EAGAIN
The system is incapable of allocating a new timer or signal.  Possible
reasons include the number of timers exceeding the system wide maximum
timers set at system configure time or insufficient resources.
.TP
.BR EFAULT
A specified memory address is outside the address range of the calling process.
.TP
.BR EINVAL
The specified clock ID,
.BR sigev_signo ,
.BR sigev_notify ,
or
.BR SIGEV_THREAD_ID
value is invalid.
.TP
.BR ENOSYS
The
.BR timer_create (3)
function is not supported by the system.
.SH "CONFORMING TO"
POSIX 1003.1b (formerly POSIX.4) as ammended by POSIX 1003.1j-2000.
.PP
The
.BR SIGEV_THREAD_ID
value is an extension to this standard intended to overcome the lack of process
signals in Linux.
.SH "SEE ALSO"
.BR clock_getres (3),
.BR clock_gettime (3),
.BR clock_settime (3),
.BR clock_nanosleep (3),
.BR timer_delete (3),
.BR timer_settime (3),
.BR timer_gettime (3),
.BR timer_getoverrun (3)
.sp
.I IEEE 1003.1b-1993
(POSIX.1b standard, formerly POSIX.4), Section 14 (Clocks and Timers).
